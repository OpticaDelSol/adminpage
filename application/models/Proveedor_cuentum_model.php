<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 /*
drop temporary table if exists operaciones;
create temporary table operaciones 
( id int(11), tipo varchar(45), monto decimal(10,4), fecha datetime);

insert into operaciones (id, tipo, monto, fecha)(
select 
d.id, 'FACTURA' as 'tipo', d.monto_total as 'monto', d.fecha_carga  as 'fecha'
from documento d, proveedor_cuenta pc where 
pc.nro_cuenta = 1 and d.proveedor_cuenta_id1 = pc.id and
pc.proveedor_id = 0
);
insert into operaciones (id, tipo, monto, fecha)(
select pp.id, 'PAGO' as 'tipo', pp.monto, pp.fecha_alta as 'fecha' 
from pago_proveedor pp, proveedor_cuenta pc 
where pp.proveedor_cuenta_id = pc.id and
pc.nro_cuenta = 1 and
pc.proveedor_id = 0
);

select id, tipo, concat( '$ ', format(monto,2)) as 'monto', date_format(fecha, '%d/%M/%y') as 'fecha'
from operaciones order by fecha asc;

drop temporary table if exists operaciones;
  */
class Proveedor_cuentum_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    function ObtenerOperaciones_total($prov_id)
    {
        $result1 = $this->db->query
                (
                " 
                    select 
                    d.codigo,
                    date_format(d.fecha_carga,'%y%m%d') as 'id1',
                    d.id, 
                    d.tipo as 'tipo', 
                    REPLACE(format( d.monto_total,2),',','') as 'monto', 
                    date_format( d.fecha_carga,'%d/%m/%Y')  as 'fecha',
                    d.tipo_documento as 'detalle'
                    from documento d, proveedor_cuenta pc where 
                    d.proveedor_cuenta_id1 = pc.id and
                    pc.proveedor_id = ".$prov_id." and d.anulado=0 order by id1,d.id;
                "
                )
                ->result_array();
        
        $result2 = $this->db->query
                (
//                select 
//                    date_format(pp.fecha_alta,'%y%m%d') as 'id1',
//                    r.id, 'RECIBO' as 'tipo', REPLACE(format( pp.monto , 2),',','') as 'monto', date_format(pp.fecha_alta,'%d/%m/%Y') as 'fecha' 
//                    from pago_proveedor pp, proveedor_cuenta pc , recibo r 
//                    where pp.proveedor_cuenta_id = pc.id and
//                    pc.proveedor_id = ".$prov_id."  and
//                    r.fkPago = pp.id and r.anulado=0
//                    order by id1,pp.id;
                " 
                    select
                    '' as 'codigo',
                    date_format(pp.fecha_alta,'%y%m%d') as 'id1',
                    pp.id, 'PAGO' as 'tipo', 
                    REPLACE(format(  pp.monto,2,'en_US'),',','') as 'monto',
                    date_format(  pp.fecha_alta,'%d/%m/%Y') as 'fecha' ,
                    '' as 'detalle' 
                    from 
                            pago_proveedor pp, 
                            proveedor_cuenta pc
                    where 
                    pp.proveedor_cuenta_id = pc.id and
                    pc.proveedor_id = ".$prov_id." 
                    order by id1,pp.id;   
                "
                )
                ->result_array();
        
        //SORT
        $operations = array_merge($result1,$result2);
        
        $sorted = false;
        while(!$sorted)
        {
            $sorted=true;
            for($i =1; $i< sizeof( $operations) ; $i++)
            {
                if((int)$operations[$i]['id1']<(int)$operations[$i-1]['id1'])
                {
                    $temp = $operations[$i];
                    $operations[$i] = $operations[$i-1];
                    $operations[$i-1] = $temp;
                    $sorted=false;
                }

            }
        }
        
        return $operations;
        
        
        
    }
    
    function ObtenerOperaciones($tipo, $prov_id)
    {
        $nro_cta = ($tipo == "FACTURA") ? 1: 2;
        
        $result1 = $this->db->query
                (
                " 
                    select 
                    d.codigo,
                    date_format(d.fecha_carga,'%y%m%d') as 'id1',
                    d.id, 
                    d.tipo as 'tipo', 
                    REPLACE(format(  d.monto_total,2,'en_US'),',','') as 'monto', 
                    date_format( d.fecha_carga ,'%d/%m/%Y') as 'fecha',
                    d.tipo_documento as 'detalle'
                    from documento d, proveedor_cuenta pc where 
                    pc.nro_cuenta = ".$nro_cta." and d.proveedor_cuenta_id1 = pc.id and
                    pc.proveedor_id = ".$prov_id." and d.anulado=0 order by id1,d.id;
                "
                )
                ->result_array();
        
        $result2 = $this->db->query
                (
//                " 
//                    select 
//                    date_format(pp.fecha_alta,'%y%m%d') as 'id1',
//                    r.id, 'RECIBO' as 'tipo', REPLACE(format(  pp.monto,2,'en_US'),',','') as 'monto',date_format(  pp.fecha_alta,'%d/%m/%Y') as 'fecha' 
//                    from pago_proveedor pp, proveedor_cuenta pc, recibo r 
//                    where pp.proveedor_cuenta_id = pc.id and
//                    pc.nro_cuenta = ".$nro_cta." and
//                    pc.proveedor_id = ".$prov_id." and
//                    r.fkPago = pp.id and r.anulado=0
//                    order by id1,pp.id;
//                "
                
                "
                    select
                    '' as 'codigo',
                    date_format(pp.fecha,'%y%m%d') as 'id1',
                    pp.id, 'PAGO' as 'tipo', 
                    REPLACE(format(  pp.monto,2,'en_US'),',','') as 'monto',
                    date_format(  pp.fecha,'%d/%m/%Y') as 'fecha' ,
                    '' as 'detalle'
                    from 
                            pago_proveedor pp, 
                            proveedor_cuenta pc
                    where 
                    pp.proveedor_cuenta_id = pc.id and
                    pc.nro_cuenta = ".$nro_cta." and
                    pc.proveedor_id = ".$prov_id." 
                    order by id1,pp.id;
                "
                )
                ->result_array();
        
        //SORT
        $operations = array_merge($result1,$result2);
        
        $sorted = false;
        while(!$sorted)
        {
            $sorted=true;
            for($i =1; $i< sizeof( $operations) ; $i++)
            {
                if((int)$operations[$i]['id1']<(int)$operations[$i-1]['id1'])
                {
                    $temp = $operations[$i];
                    $operations[$i] = $operations[$i-1];
                    $operations[$i-1] = $temp;
                    $sorted=false;
                }

            }
        }
        
        return $operations;
        
        
        
    }
    
    function ObtenerCuenta($tipo, $prov_id)
    {
        $nro_cta = ($tipo == "FACTURA") ? 1: 2;
        return $this->db->query("select pc.id from proveedor_cuenta pc where pc.proveedor_id = ".$prov_id." and pc.nro_cuenta = ".$nro_cta.";")->row_array();
    }
    
    function CrearCuenta($tipo, $prov_id)
    {
        $nro_cta = ($tipo == "FACTURA") ? 1: 2;
        $this->db->query("INSERT into proveedor_cuenta (proveedor_id, nro_cuenta,saldo) values ('".$prov_id."',".$nro_cta.",0)");
        return $this->db->insert_id();
        
    }
    
    /*
     * Get proveedor_cuentum by id
     */
    function get_proveedor_cuentum($id)
    {
        return $this->db->get_where('proveedor_cuenta',array('id'=>$id))->row_array();
    }
        
    /*
     * Get all proveedor_cuenta
     */
    function get_all_proveedor_cuenta()
    {
        $this->db->order_by('id', 'desc');
        return $this->db->get('proveedor_cuenta')->result_array();
    }
        
    /*
     * function to add new proveedor_cuentum
     */
    function add_proveedor_cuentum($params)
    {
        $this->db->insert('proveedor_cuenta',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update proveedor_cuentum
     */
    function update_proveedor_cuentum($id,$params)
    {
        $this->db->where('id',$id);
        return $this->db->update('proveedor_cuenta',$params);
    }
    
    /*
     * function to delete proveedor_cuentum
     */
    function delete_proveedor_cuentum($id)
    {
        return $this->db->delete('proveedor_cuenta',array('id'=>$id));
    }
}
